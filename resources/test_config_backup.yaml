# path to the checkpoint file containing the model
model_path: /home/SENSETIME/shenrui/Dropbox/SenseTime/edgeDL/saved_weights/pelvis/casenet2d/best_checkpoint.pytorch
# path to the folder of the predictions
save_path: /home/SENSETIME/shenrui/data/pelvis_predict
prediction_channel: null
# model configuration
model:
  # model class
  name: ResNet
  # number of input channels to the model
  in_channels: 1
  # number of output classes
  out_channels: 5
  # set layers
  layers: [3, 4, 23, 3]
  # apply element-wise nn.Sigmoid after the final 1x1 convolution
  final_sigmoid: True
# evaluation metric configuration
eval_metric:
  name: PrecisionStats
  # a target label that is ignored during metric evaluation
  ignore_index: null
  # number of points in PR curve
  nthresh: 19
# specify the test datasets
loaders:
  # test patch size given to the network (adapt to fit in your GPU mem)
  test_patch: [350, 350]
  # test stride between patches (make sure the the patches overlap in order to get smoother prediction maps)
  test_stride: [100, 100]
  # clip value within the range
  clip_val: [-1000, 2000]
  # how many subprocesses to use for data loading
  num_workers: 0
  # paths to the datasets
  test_path:
    - '/home/SENSETIME/shenrui/data/pelvis_resampled/dataset_train_temp.txt'
  transformer:
    test:
      raw:
        - name: ClipNormalize
        - name: ToTensor
          expand_dims: true
      label:
        - name: SegToEdge
        - name: ToTensor
          expand_dims: false
          dtype: 'long'