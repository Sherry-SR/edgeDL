# path to the checkpoint file containing the model
model_path: /home/SENSETIME/shenrui/Dropbox/SenseTime/edgeDL/saved_weighst/pelvis/xxx.pytorch
# Should the patches be stored in memory or written directly to file during prediction.
# Set to True if you have enough RAM cause it's way faster
store_predictions_in_memory: True
# model configuration
model:
  # model class
  name: UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 2
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order: crg
  # feature maps scale factor
  f_maps: 32
  # basic module
  basic_module: DoubleConv
  # number of groups in the groupnorm
  num_groups: 8
  # apply element-wise nn.Sigmoid after the final 1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: false
# specify the test datasets
loaders:
  # test patch size given to the network (adapt to fit in your GPU mem)
  test_patch: [64, 256, 256]
  # test stride between patches (make sure the the patches overlap in order to get smoother prediction maps)
  test_stride: [50, 100, 100]
  # clip value within the range
  clip_val: [-1000, 2000]
  # how many subprocesses to use for data loading
  num_workers: 8
  # paths to the datasets
  test_path:
    - '/home/SENSETIME/shenrui/data/pelvis_resampled/dataset_test.txt'
  transformer:
    test:
      raw:
        - name: Normalize
        - name: ToTensor
          expand_dims: true
